<?xml version="1.0"?>

<robot name="autoserve" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:property name="base_link" value="Gazebo/Red" />
<xacro:property name="wheels" value="Gazebo/Black" />
<xacro:property name="imu" value="Gazebo/PurpleGlow" />
<xacro:property name="lidar" value="Gazebo/BlueGlow" />
<xacro:property name="depth_cam" value="Gazebo/TurquoiseGlow" />
<xacro:property name="plate" value="Gazebo/Green" />

  <!-- Wheels -->
  <gazebo reference="${robot_namespace}_left_wheel">
    <material>${wheels}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <maxContacts>1</maxContacts>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="${robot_namespace}_right_wheel">
    <material>${wheels}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <maxContacts>1</maxContacts>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
    
  <!-- Caster Wheels -->
  <gazebo reference="${robot_namespace}_base_link">
    <material>${base_link}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <maxContacts>1</maxContacts>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="${robot_namespace}_base_footprint">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <maxContacts>1</maxContacts>
  </gazebo>

  <gazebo reference="${robot_namespace}_depth_camera_1">
    <material>${depth_cam}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>

  <gazebo reference="${robot_namespace}_depth_camera_2">
    <material>${depth_cam}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>

  <gazebo reference="${robot_namespace}_ydlidar">
    <material>${lidar}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>

  <gazebo reference="${robot_namespace}_imu">
    <material>${imu}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>

  <gazebo reference="${robot_namespace}_plate_1">
    <material>${plate}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>

  <gazebo reference="${robot_namespace}_plate_2">
    <material>${plate}</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
    
  <!-- <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <robot_param>robot_description</robot_param>
      <robot_param_node>robot_state_publisher</robot_param_node>
      <parameters>$(find autoserve_controller)/config/autoserve_controllers.yaml</parameters>
    </plugin>
  </gazebo> -->

  <!-- <gazebo>
    <plugin name="diff_drive_control" filename="libgazebo_ros_diff_drive.so">

      <update_rate>50</update_rate>

      <left_joint>base2leftw</left_joint>
      <right_joint>base2rightw</right_joint>

      <wheel_separation>0.34</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>

      <command_topic>cmd_vel</command_topic>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>
  </gazebo> -->
  <gazebo>
    <plugin name="${robot_namespace}_object_controller" filename="libgazebo_ros_planar_move.so">
        <ros>
          <!-- <namespace>${robot_namespace}</namespace> -->
          <remapping>cmd_vel:=${robot_namespace}_cmd_vel</remapping>
          <remapping>odom:=${robot_namespace}_odom</remapping>
      </ros>
      <odometry_frame>odom</odometry_frame>
      <update_rate>20.0</update_rate>
      <publish_rate>20.0</publish_rate>
      <robot_base_frame>${robot_namespace}_base_footprint</robot_base_frame>
    </plugin>
  </gazebo>

  <gazebo reference="${robot_namespace}_imu">
    <gravity>true</gravity>
    <sensor name="${robot_namespace}_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <plugin name="${robot_namespace}_my_imu_plugin" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <remapping>~/out:=${robot_namespace}_imu</remapping>
        </ros>
        <frame_name>${robot_namespace}_imu</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${robot_namespace}_ydlidar">
    <sensor type="ray" name="${robot_namespace}_head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>300</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="${robot_namespace}_my_ray_sensor_plugin" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=${robot_namespace}_scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <min_intensity>100.0</min_intensity>
        <frame_name>${robot_namespace}_ydlidar</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${robot_namespace}_camera_link">
    <sensor name="${robot_namespace}_camera" type="depth">
      <pose> 0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>60.0</update_rate>
      <camera name="${robot_namespace}_camera_link">
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>50</far>
        </clip>
      </camera>
      <plugin name="${robot_namespace}_depth_camera_controller_1" filename="libgazebo_ros_camera.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <frame_name>${robot_namespace}_camera_link_optical</frame_name>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>50.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${robot_namespace}_depth_camera_2">
    <sensor name="${robot_namespace}_camera_2" type="depth">
      <pose> 0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>60.0</update_rate>
      <camera name="${robot_namespace}_depth_camera_2">
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>30</far>
        </clip>
      </camera>
      <plugin name="${robot_namespace}_depth_camera_controller_2" filename="libgazebo_ros_camera.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <frame_name>${robot_namespace}_depth_camera_2</frame_name>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo> 

</robot>